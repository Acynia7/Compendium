security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        App\Entity\User: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        users:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        login:
            pattern: ^/auth
            stateless: true
            provider: users
            json_login:
                check_path: /auth # The name in routes.yaml is enough for mapping
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: users
            jwt: ~        

        main:
            lazy: true
            provider: users
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                default_target_path: app_home # Redirige vers la route app_home après connexion réussie
            logout:
                path: app_logout
        

    access_control:
        - { path: ^/$, roles: PUBLIC_ACCESS }
        # - { path: ^/profile, roles: ROLE_USER }

        - { path: ^/auth, roles: PUBLIC_ACCESS }
        - { path: ^/api/docs, roles: PUBLIC_ACCESS }
        # - { path: ^/api/sessions, roles: PUBLIC_ACCESS }


        - { path: ^/admin, roles: ROLE_ADMIN }

        - { path: ^/app, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api, roles: ROLE_USER }
        

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
